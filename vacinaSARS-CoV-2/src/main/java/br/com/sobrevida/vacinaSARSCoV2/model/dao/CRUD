MODELO DE CRUD BÁSICO:

    public void inserir(){
        //1: Definir o comando SQL
        String sql = "INSERT INTO tb_pessoa(nome, fone, email) VALUES (?, ?, ?)";
        
        //2: Abrir uma conexão
        DAO dao = new DAO();
        try(Connection conn = dao.connection()){
            
            //3: Pré compila o comando
            PreparedStatement ps = conn.prepareStatement(sql);
            
            //4: Preenche os dados faltantes
            ps.setString(1, nome);
            ps.setString(2, fone);
            ps.setString(3, email);
            
            //5: Executa o comando
            ps.execute();
        }
        catch(Exception e){
            e.printStackTrace();
        }
    }
    
    public void atualizar (){   
        //1: Definir o comando SQL
        String sql = "UPDATE tb_pessoa SET nome = ?, fone = ?, email = ? WHERE codigo = ?";
        //2: Abrir uma conexão
        DAO dao = new DAO();
        try(Connection conn = dao.connection()){
        //3: Pré compila o comando
        PreparedStatement ps = conn.prepareStatement(sql);
        //4: Preenche os dados faltantes
        ps.setString(1, nome);
        ps.setString(2, fone);
        ps.setString(3, email);
        ps.setInt(4, codigo);
        //5: Executa o comando
        ps.execute();
        }
        catch (Exception e){
            e.printStackTrace();
        }
    }
    
    public void apagar(){
        //1: Definir o comando SQL
        String sql = "DELETE FROM tb_pessoa WHERE codigo = ?";
        //2: Abrir uma conexão
        DAO dao = new DAO();
        try(Connection conn = dao.connection()){
        //3: Pré compila o comando
        PreparedStatement ps = conn.prepareStatement(sql);
        //4: Preenche os dados faltantes
        ps.setInt(1, codigo);
        //5: Executa o comando
        ps.execute();
        }
        catch (Exception e){
            e.printStackTrace();
        }
    }
    
    public void listar(){
        //1: Definir o comando SQL
        String sql = "SELECT * FROM tb_pessoa";
        
        //2: Abrir uma conexão
        DAO dao = new DAO();
        
        try(Connection conn = dao.connection()){
        
            //3: Pré compila o comando
            PreparedStatement ps = conn.prepareStatement(sql);

            //4: Executa o comando e guarda
            //o resultado em um ResultSet
            ResultSet rs = ps.executeQuery();
            
            //5: itera sobre o resultado
            while(rs.next()){
                int codigo = rs.getInt("codigo");
                String nome = rs.getString("nome");
                String fone = rs.getString("fone");
                String email = rs.getString("email");
                String aux = String.format(
                "Código: %d, Nome: %s, Fone: %s, Email: %s",
                codigo,
                nome,
                fone,
                email
                );
                JOptionPane.showMessageDialog(null, aux);
            }
            
        }
        catch (Exception e){
            e.printStackTrace();
        }
    }

TESTANDO O CRUD NA PRINCIPAL:

String menu = "1-Cadastrar\n2-Atualizar\n3-Apagar\n4-Listar\n0-Sair";

        int op;

        do{
            op = Integer.parseInt(JOptionPane.showInputDialog(menu));

            switch(op){
                case 1:
                {
                    String nome = JOptionPane.showInputDialog("Nome?");
                    String fone = JOptionPane.showInputDialog("Fone?");
                    String email = JOptionPane.showInputDialog("Email?");
                    
                    PessoaController pessoaController = new PessoaController();
                    
                    pessoaController.inserir(nome, fone, email);
                            
                    PessoaModel pm = new PessoaModel();
                    PessoaController pc = new PessoaController();
                    
                    pm.setNome(nome);
                    pm.setFone(fone);
                    pm.setEmail(email);
                    
                    pc.inserir(pm);
                    break;
                }
                case 2:
                {
                    String nome = JOptionPane.showInputDialog("Nome?");
                    String fone = JOptionPane.showInputDialog("Fone?");
                    String email = JOptionPane.showInputDialog("Email?");
                    int codigo = Integer.parseInt(JOptionPane.showInputDialog("Codigo?"));
                    PessoaModel p = new PessoaModel ();
                    p.setNome(nome);
                    p.setFone(fone);
                    p.setEmail(email);
                    p.setCodigo(codigo);
                    p.atualizar();
                    break;
                }
                case 3:
                {
                    int codigo =
                    Integer.parseInt(JOptionPane.showInputDialog("Codigo?"));
                    PessoaModel p = new PessoaModel ();
                    p.setCodigo(codigo);
                    p.apagar();
                    break;
                }
                case 4:{
                    PessoaModel p = new PessoaModel();
                    p.listar();
                    break;
                }
                case 0:
                    break;
                default:
                    JOptionPane.showMessageDialog(null, "Opção inválida");
            }
        }while(op != 0);